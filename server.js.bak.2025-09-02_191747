require('dotenv').config();
const express = require('express');
const path = require('path');

const app = express();

// Middlewares
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Publicar /uploads (útil en local; en prod también lo sirve Nginx)
const UPLOADS_DIR = process.env.UPLOADS_DIR || '/var/www/crm_uploads';
app.use('/uploads', express.static(UPLOADS_DIR));

// Rutas
const clientsRoutes  = require('./routes/clients');
const authRoutes     = require('./routes/auth');
const usersRoutes    = require('./routes/users');
const servicesRoutes = require('./routes/services');
const uploadsRoutes = require('./routes/uploads');

// Montaje de rutas
app.use('/api/clients', clientsRoutes);    // CRUD clientes
app.use('/api/clients', servicesRoutes);   // /:id/services + fotos
app.use('/api/auth',    authRoutes);       // login
app.use('/api/users',   usersRoutes);      // admin: gestión de usuarios
app.use('/api', uploadsRoutes);

// (Opcional) Métricas si existe el archivo
try {
  const metricsRoutes = require('./routes/metrics');
  app.use('/api/metrics', metricsRoutes);
} catch (_e) { /* ignore if not present */ }

// Debug
app.post('/api/_debug_echo', (req, res) => {
  res.json({ headers: req.headers, body: req.body });
});

// Health
app.get('/api/health', (_req, res) => res.json({ status: 'ok' }));

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`CRM backend running on port ${PORT}`));
