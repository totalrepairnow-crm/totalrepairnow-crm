require('dotenv').config();
const dotenv = require("dotenv"); dotenv.config();
const express = require('express');
const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
const clientsRoutes = require("./routes/clients");
app.use("/api", clientsRoutes);
const authRoutes = require("./routes/auth");
app.use("/api/auth", authRoutes);
app.use("/api/auth", authRoutes);
app.post("/api/_debug_echo", (req,res) => res.json({ headers: req.headers, body: req.body }));




// Body parsers

const PORT = process.env.PORT || 3000;

app.get('/api/health', (req, res) => {
  res.json({status: 'ok'});
});

app.listen(PORT, () => {
  console.log(`CRM backend running on port ${PORT}`);
});
// === Auth mínimo de desarrollo ===
// Credenciales por variables de entorno (con defaults):
//   ADMIN_EMAIL=admin@totalrepairnow.com
//   ADMIN_PASSWORD=TuClaveSegura123
app.post(['/api/auth/login','/auth/login'], (req, res) => {
  const { email, password } = req.body || {};
  const ADMIN_EMAIL = process.env.ADMIN_EMAIL || 'admin@totalrepairnow.com';
  const ADMIN_PASSWORD = process.env.ADMIN_PASSWORD || 'TuClaveSegura123';
  if (!email || !password) return res.status(400).json({ error: 'Email y password requeridos' });

  if (email === ADMIN_EMAIL && password === ADMIN_PASSWORD) {
    const token = 'dev.' + Buffer.from(String(Date.now())).toString('base64');
    return res.json({ token, user: { email, role: 'admin' } });
  }
  return res.status(401).json({ error: 'Credenciales inválidas' });
});
