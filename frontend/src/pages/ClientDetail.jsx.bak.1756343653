import React, { useEffect, useState } from "react";
import { useParams, Link } from "react-router-dom";

export default function ClientDetail() {
  const { id } = useParams();              // viene de /clients/:id
  const [client, setClient] = useState(null);
  const [loading, setLoading] = useState(true);
  const [err, setErr] = useState("");

  useEffect(() => {
    let alive = true;
    async function load() {
      try {
        setLoading(true);
        setErr("");
        const token = localStorage.getItem("token");
        const res = await fetch(`/api/clients/${id}`, {
          headers: token ? { Authorization: `Bearer ${token}` } : {},
        });
        if (!res.ok) {
          const j = await res.json().catch(() => ({}));
          throw new Error(j.error || `HTTP ${res.status}`);
        }
        const data = await res.json();
        if (alive) setClient(data);
      } catch (e) {
        if (alive) setErr(e.message || "Error");
      } finally {
        if (alive) setLoading(false);
      }
    }
    load();
    return () => { alive = false; };
  }, [id]);

  if (loading) return <div className="card" style={{padding:16}}>Cargando…</div>;
  if (err)     return <div className="card" style={{padding:16,color:"#f87171"}}>Error: {String(err)}</div>;
  if (!client) return <div className="card" style={{padding:16}}>No encontrado</div>;

  return (
    <div className="dash-wrap">
      <div className="dash-head">
        <h2 className="dash-title">Cliente</h2>
        <Link to="/" className="btn">← Volver</Link>
      </div>

      <div className="card" style={{padding:20}}>
        <h3 style={{marginTop:0}}>{client.empresa}</h3>
        <div style={{display:"grid", gridTemplateColumns:"repeat(auto-fit,minmax(220px,1fr))", gap:16}}>
          <div><strong>Email:</strong><br/>{client.email || "—"}</div>
          <div><strong>Teléfono:</strong><br/>{client.telefono || "—"}</div>
          <div><strong>Estado:</strong><br/>{client.estado || "—"}</div>
          <div><strong>ID:</strong><br/>{client.id} ({client.cliente_id})</div>
          <div><strong>Último contacto:</strong><br/>{client.last_contact_at || "—"}</div>
          <div><strong>Creado:</strong><br/>{client.created_at}</div>
        </div>
      </div>

      {/* Placeholder para módulos siguientes: servicios, uploads, etc. */}
      <div style={{height:12}} />
      <div className="card" style={{padding:20}}>
        <h4 style={{marginTop:0}}>Servicios del cliente</h4>
        <p>Próximamente: listado de servicios y creación/edición.</p>
      </div>
    </div>
  );
}

import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { apiFetch } from "../utils/api";

export default function ClientDetail() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [client, setClient] = useState(null);
  const [err, setErr] = useState("");
  const [loading, setLoading] = useState(true);

  useEffect(()=>{
    (async ()=>{
      setLoading(true); setErr("");
      try {
        const r = await apiFetch(`/api/clients/${id}`);
        if (!r.ok) throw new Error(`HTTP ${r.status}`);
        setClient(await r.json());
      } catch(e) {
        console.error(e);
        setErr("No se pudo cargar el cliente");
      } finally { setLoading(false); }
    })();
  },[id]);

  return (
    <div className="container">
      <div className="dash-head">
        <h1 className="dash-title">Cliente #{id}</h1>
        <div className="spacer" />
        <button className="btn" onClick={()=> navigate(`/clients/${id}/edit`)}>Editar</button>
      </div>

      <section className="card">
        {loading ? <div className="skel" /> :
         err ? <div className="alert error">{err}</div> :
         client && (
           <div className="kv">
             <div><b>Empresa:</b> {client.empresa}</div>
             <div><b>Email:</b> {client.email || "—"}</div>
             <div><b>Teléfono:</b> {client.telefono || "—"}</div>
             <div><b>Estado:</b> {client.estado}</div>
             <div><b>Creado:</b> {new Date(client.created_at).toLocaleString()}</div>
             <div><b>Actualizado:</b> {new Date(client.updated_at).toLocaleString()}</div>
           </div>
         )}
      </section>
    </div>
  );
}
