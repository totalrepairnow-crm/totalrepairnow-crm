# .github/workflows/frontend-deploy.yml
name: Frontend — Build & Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'
  workflow_dispatch:
    inputs:
      target:
        description: 'staging | prod'
        required: false
        default: 'staging'

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install & Build
        run: |
          npm ci
          CI=false npm run build   # evita que warnings de ESLint rompan el build

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        shell: bash
        run: |
          mkdir -p ~/.ssh
          # OJO: guion normal "-", no "—"
          ssh-keyscan -T 10 -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts
          wc -l ~/.ssh/known_hosts

      - name: Choose target dir (staging vs prod)
        id: pick
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.target }}" == "prod" ]]; then
            echo "dir=/var/www/crm_frontend/v2" >> "$GITHUB_OUTPUT"
          else
            echo "dir=/var/www/crm_frontend/v2-staging" >> "$GITHUB_OUTPUT"
          fi

      - name: Rsync dist → server
        shell: bash
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=yes" \
            dist/ "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ steps.pick.outputs.dir }}/"

      - name: Reload Nginx
        shell: bash
        run: |
          ssh "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
            'sudo nginx -t && sudo systemctl reload nginx'
